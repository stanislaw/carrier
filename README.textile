h1. Carrier 

Carrier is result of extracting simple messaging functionality from one working Rails app.

h2. Installiation

Insert into Gemfile

@gem 'carrier'@

Run bundler to bundle gems in the app

@$ bundle update@

Since Carrier is a Rails 3.1 mountable app, you need to define mount point like:

<pre>
<code>
# config/routes.rb
mount Carrier::Engine => "/carrier" 
</code>
</pre>

Carrier works only for authenticated users expecting #current_user method somehow defined. 
Carrier's controllers namespaces are isolated, so to provide authentication procedure yielding #current_user (before_filter is most common way) add it to Carrier::ApplicationController like:

<pre>
<code>

# your app's root/app/controllers/carrier/application_controller.rb
module Carrier
  class ApplicationController < ActionController::Base
    before_filter :authenticate_user! # If using Devise
  end
end

</pre>
</code>

This ensures that Carrier will be aware of current authenticated user.

h2. Design overview

The Carrier design is very simple:
Is has messages and chains (Message model, and Chain model). Message model has chain_id i.e. messages are simply grouped in chains. Chains are non-threaded, each chain is just a linear sequence of messages.

All queries to messages and their chains are being done using scopes with joins and includes so performance is expected to be fast as possible (review it and advice how accomplish it even better!).

Carrier now doesn't support deletion of messages. Instead it supports archivations of chains (Chain has #archived_for field to store serialized array of user's ids).


h2. Configuration

h2. Contributors

* Stanislaw Pankevich

h2. Copyright

Copyright (c) 2011 Stanislaw Pankevich. See LICENSE for details.
